# Generated from /home/tibov/Desktop/universiteit/bachlor-2/Compilers/Project/Compilers/grammar/grammarC.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,67,464,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,
        58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,
        65,7,65,2,66,7,66,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,
        2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,
        4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,
        8,1,9,1,9,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,
        1,12,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,13,1,13,
        1,13,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,16,1,16,
        1,16,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,19,1,19,1,19,
        1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,
        1,21,1,21,1,22,1,22,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,24,
        1,24,1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,26,1,26,
        1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,27,1,27,1,27,1,28,1,28,1,28,
        1,28,1,29,1,29,1,29,1,29,1,29,1,30,1,30,1,30,1,30,1,30,1,30,1,31,
        1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,33,1,33,
        1,33,1,33,1,33,1,33,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,35,1,35,
        1,36,1,36,1,36,1,37,1,37,1,38,1,38,1,38,1,39,1,39,1,39,1,40,1,40,
        1,41,1,41,1,42,1,42,1,43,1,43,1,44,1,44,1,45,1,45,1,46,1,46,1,46,
        1,47,1,47,1,47,1,48,1,48,1,49,1,49,1,50,1,50,1,50,1,51,1,51,1,51,
        1,52,1,52,1,52,1,53,1,53,1,53,1,54,1,54,1,55,1,55,1,56,1,56,1,56,
        1,57,1,57,1,57,1,58,1,58,1,59,1,59,1,60,1,60,1,60,1,60,5,60,386,
        8,60,10,60,12,60,389,9,60,1,60,1,60,1,60,1,60,5,60,395,8,60,10,60,
        12,60,398,9,60,1,60,1,60,3,60,402,8,60,1,61,3,61,405,8,61,1,61,5,
        61,408,8,61,10,61,12,61,411,9,61,1,62,1,62,5,62,415,8,62,10,62,12,
        62,418,9,62,1,62,3,62,421,8,62,1,63,1,63,5,63,425,8,63,10,63,12,
        63,428,9,63,1,63,1,63,1,63,5,63,433,8,63,10,63,12,63,436,9,63,3,
        63,438,8,63,1,64,1,64,3,64,442,8,64,1,64,1,64,1,64,1,65,1,65,1,65,
        1,65,5,65,451,8,65,10,65,12,65,454,9,65,1,65,1,65,1,66,4,66,459,
        8,66,11,66,12,66,460,1,66,1,66,2,396,441,0,67,1,1,3,2,5,3,7,4,9,
        5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,
        33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,
        55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,
        77,39,79,40,81,41,83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,49,
        99,50,101,51,103,52,105,53,107,54,109,55,111,56,113,57,115,58,117,
        59,119,60,121,61,123,62,125,63,127,64,129,65,131,66,133,67,1,0,7,
        1,0,10,10,3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,97,122,1,
        0,49,57,1,0,48,57,2,0,10,10,34,34,3,0,9,10,13,13,32,32,477,0,1,1,
        0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,
        0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,
        0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,
        0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,
        0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,
        0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,
        0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,
        0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,
        0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,
        0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,
        0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,
        1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,
        0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,1,
        0,0,0,0,131,1,0,0,0,0,133,1,0,0,0,1,135,1,0,0,0,3,137,1,0,0,0,5,
        145,1,0,0,0,7,152,1,0,0,0,9,161,1,0,0,0,11,171,1,0,0,0,13,173,1,
        0,0,0,15,175,1,0,0,0,17,177,1,0,0,0,19,179,1,0,0,0,21,181,1,0,0,
        0,23,183,1,0,0,0,25,189,1,0,0,0,27,198,1,0,0,0,29,206,1,0,0,0,31,
        214,1,0,0,0,33,216,1,0,0,0,35,219,1,0,0,0,37,224,1,0,0,0,39,228,
        1,0,0,0,41,234,1,0,0,0,43,241,1,0,0,0,45,246,1,0,0,0,47,248,1,0,
        0,0,49,256,1,0,0,0,51,261,1,0,0,0,53,268,1,0,0,0,55,274,1,0,0,0,
        57,280,1,0,0,0,59,284,1,0,0,0,61,289,1,0,0,0,63,295,1,0,0,0,65,300,
        1,0,0,0,67,307,1,0,0,0,69,313,1,0,0,0,71,320,1,0,0,0,73,322,1,0,
        0,0,75,325,1,0,0,0,77,327,1,0,0,0,79,330,1,0,0,0,81,333,1,0,0,0,
        83,335,1,0,0,0,85,337,1,0,0,0,87,339,1,0,0,0,89,341,1,0,0,0,91,343,
        1,0,0,0,93,345,1,0,0,0,95,348,1,0,0,0,97,351,1,0,0,0,99,353,1,0,
        0,0,101,355,1,0,0,0,103,358,1,0,0,0,105,361,1,0,0,0,107,364,1,0,
        0,0,109,367,1,0,0,0,111,369,1,0,0,0,113,371,1,0,0,0,115,374,1,0,
        0,0,117,377,1,0,0,0,119,379,1,0,0,0,121,401,1,0,0,0,123,404,1,0,
        0,0,125,420,1,0,0,0,127,437,1,0,0,0,129,439,1,0,0,0,131,446,1,0,
        0,0,133,458,1,0,0,0,135,136,5,59,0,0,136,2,1,0,0,0,137,138,5,35,
        0,0,138,139,5,105,0,0,139,140,5,102,0,0,140,141,5,110,0,0,141,142,
        5,100,0,0,142,143,5,101,0,0,143,144,5,102,0,0,144,4,1,0,0,0,145,
        146,5,35,0,0,146,147,5,101,0,0,147,148,5,110,0,0,148,149,5,100,0,
        0,149,150,5,105,0,0,150,151,5,102,0,0,151,6,1,0,0,0,152,153,5,35,
        0,0,153,154,5,105,0,0,154,155,5,110,0,0,155,156,5,99,0,0,156,157,
        5,108,0,0,157,158,5,117,0,0,158,159,5,100,0,0,159,160,5,101,0,0,
        160,8,1,0,0,0,161,162,5,60,0,0,162,163,5,115,0,0,163,164,5,116,0,
        0,164,165,5,100,0,0,165,166,5,105,0,0,166,167,5,111,0,0,167,168,
        5,46,0,0,168,169,5,104,0,0,169,170,5,62,0,0,170,10,1,0,0,0,171,172,
        5,40,0,0,172,12,1,0,0,0,173,174,5,42,0,0,174,14,1,0,0,0,175,176,
        5,41,0,0,176,16,1,0,0,0,177,178,5,123,0,0,178,18,1,0,0,0,179,180,
        5,125,0,0,180,20,1,0,0,0,181,182,5,44,0,0,182,22,1,0,0,0,183,184,
        5,98,0,0,184,185,5,114,0,0,185,186,5,101,0,0,186,187,5,97,0,0,187,
        188,5,107,0,0,188,24,1,0,0,0,189,190,5,99,0,0,190,191,5,111,0,0,
        191,192,5,110,0,0,192,193,5,116,0,0,193,194,5,105,0,0,194,195,5,
        110,0,0,195,196,5,117,0,0,196,197,5,101,0,0,197,26,1,0,0,0,198,199,
        5,116,0,0,199,200,5,121,0,0,200,201,5,112,0,0,201,202,5,101,0,0,
        202,203,5,100,0,0,203,204,5,101,0,0,204,205,5,102,0,0,205,28,1,0,
        0,0,206,207,5,35,0,0,207,208,5,100,0,0,208,209,5,101,0,0,209,210,
        5,102,0,0,210,211,5,105,0,0,211,212,5,110,0,0,212,213,5,101,0,0,
        213,30,1,0,0,0,214,215,5,45,0,0,215,32,1,0,0,0,216,217,5,105,0,0,
        217,218,5,102,0,0,218,34,1,0,0,0,219,220,5,101,0,0,220,221,5,108,
        0,0,221,222,5,115,0,0,222,223,5,101,0,0,223,36,1,0,0,0,224,225,5,
        102,0,0,225,226,5,111,0,0,226,227,5,114,0,0,227,38,1,0,0,0,228,229,
        5,119,0,0,229,230,5,104,0,0,230,231,5,105,0,0,231,232,5,108,0,0,
        232,233,5,101,0,0,233,40,1,0,0,0,234,235,5,115,0,0,235,236,5,119,
        0,0,236,237,5,105,0,0,237,238,5,116,0,0,238,239,5,99,0,0,239,240,
        5,104,0,0,240,42,1,0,0,0,241,242,5,99,0,0,242,243,5,97,0,0,243,244,
        5,115,0,0,244,245,5,101,0,0,245,44,1,0,0,0,246,247,5,58,0,0,247,
        46,1,0,0,0,248,249,5,100,0,0,249,250,5,101,0,0,250,251,5,102,0,0,
        251,252,5,97,0,0,252,253,5,117,0,0,253,254,5,108,0,0,254,255,5,116,
        0,0,255,48,1,0,0,0,256,257,5,101,0,0,257,258,5,110,0,0,258,259,5,
        117,0,0,259,260,5,109,0,0,260,50,1,0,0,0,261,262,5,112,0,0,262,263,
        5,114,0,0,263,264,5,105,0,0,264,265,5,110,0,0,265,266,5,116,0,0,
        266,267,5,102,0,0,267,52,1,0,0,0,268,269,5,115,0,0,269,270,5,99,
        0,0,270,271,5,97,0,0,271,272,5,110,0,0,272,273,5,102,0,0,273,54,
        1,0,0,0,274,275,5,99,0,0,275,276,5,111,0,0,276,277,5,110,0,0,277,
        278,5,115,0,0,278,279,5,116,0,0,279,56,1,0,0,0,280,281,5,105,0,0,
        281,282,5,110,0,0,282,283,5,116,0,0,283,58,1,0,0,0,284,285,5,99,
        0,0,285,286,5,104,0,0,286,287,5,97,0,0,287,288,5,114,0,0,288,60,
        1,0,0,0,289,290,5,102,0,0,290,291,5,108,0,0,291,292,5,111,0,0,292,
        293,5,97,0,0,293,294,5,116,0,0,294,62,1,0,0,0,295,296,5,118,0,0,
        296,297,5,111,0,0,297,298,5,105,0,0,298,299,5,100,0,0,299,64,1,0,
        0,0,300,301,5,115,0,0,301,302,5,116,0,0,302,303,5,114,0,0,303,304,
        5,117,0,0,304,305,5,99,0,0,305,306,5,116,0,0,306,66,1,0,0,0,307,
        308,5,117,0,0,308,309,5,110,0,0,309,310,5,105,0,0,310,311,5,111,
        0,0,311,312,5,110,0,0,312,68,1,0,0,0,313,314,5,114,0,0,314,315,5,
        101,0,0,315,316,5,116,0,0,316,317,5,117,0,0,317,318,5,114,0,0,318,
        319,5,110,0,0,319,70,1,0,0,0,320,321,5,61,0,0,321,72,1,0,0,0,322,
        323,5,45,0,0,323,324,5,62,0,0,324,74,1,0,0,0,325,326,5,46,0,0,326,
        76,1,0,0,0,327,328,5,43,0,0,328,329,5,43,0,0,329,78,1,0,0,0,330,
        331,5,45,0,0,331,332,5,45,0,0,332,80,1,0,0,0,333,334,5,38,0,0,334,
        82,1,0,0,0,335,336,5,43,0,0,336,84,1,0,0,0,337,338,5,126,0,0,338,
        86,1,0,0,0,339,340,5,33,0,0,340,88,1,0,0,0,341,342,5,47,0,0,342,
        90,1,0,0,0,343,344,5,37,0,0,344,92,1,0,0,0,345,346,5,62,0,0,346,
        347,5,62,0,0,347,94,1,0,0,0,348,349,5,60,0,0,349,350,5,60,0,0,350,
        96,1,0,0,0,351,352,5,60,0,0,352,98,1,0,0,0,353,354,5,62,0,0,354,
        100,1,0,0,0,355,356,5,62,0,0,356,357,5,61,0,0,357,102,1,0,0,0,358,
        359,5,60,0,0,359,360,5,61,0,0,360,104,1,0,0,0,361,362,5,61,0,0,362,
        363,5,61,0,0,363,106,1,0,0,0,364,365,5,33,0,0,365,366,5,61,0,0,366,
        108,1,0,0,0,367,368,5,94,0,0,368,110,1,0,0,0,369,370,5,124,0,0,370,
        112,1,0,0,0,371,372,5,38,0,0,372,373,5,38,0,0,373,114,1,0,0,0,374,
        375,5,124,0,0,375,376,5,124,0,0,376,116,1,0,0,0,377,378,5,91,0,0,
        378,118,1,0,0,0,379,380,5,93,0,0,380,120,1,0,0,0,381,382,5,47,0,
        0,382,383,5,47,0,0,383,387,1,0,0,0,384,386,8,0,0,0,385,384,1,0,0,
        0,386,389,1,0,0,0,387,385,1,0,0,0,387,388,1,0,0,0,388,402,1,0,0,
        0,389,387,1,0,0,0,390,391,5,47,0,0,391,392,5,42,0,0,392,396,1,0,
        0,0,393,395,9,0,0,0,394,393,1,0,0,0,395,398,1,0,0,0,396,397,1,0,
        0,0,396,394,1,0,0,0,397,399,1,0,0,0,398,396,1,0,0,0,399,400,5,42,
        0,0,400,402,5,47,0,0,401,381,1,0,0,0,401,390,1,0,0,0,402,122,1,0,
        0,0,403,405,7,1,0,0,404,403,1,0,0,0,405,409,1,0,0,0,406,408,7,2,
        0,0,407,406,1,0,0,0,408,411,1,0,0,0,409,407,1,0,0,0,409,410,1,0,
        0,0,410,124,1,0,0,0,411,409,1,0,0,0,412,416,7,3,0,0,413,415,7,4,
        0,0,414,413,1,0,0,0,415,418,1,0,0,0,416,414,1,0,0,0,416,417,1,0,
        0,0,417,421,1,0,0,0,418,416,1,0,0,0,419,421,7,4,0,0,420,412,1,0,
        0,0,420,419,1,0,0,0,421,126,1,0,0,0,422,438,3,125,62,0,423,425,3,
        125,62,0,424,423,1,0,0,0,425,428,1,0,0,0,426,424,1,0,0,0,426,427,
        1,0,0,0,427,429,1,0,0,0,428,426,1,0,0,0,429,434,5,46,0,0,430,433,
        3,125,62,0,431,433,5,48,0,0,432,430,1,0,0,0,432,431,1,0,0,0,433,
        436,1,0,0,0,434,432,1,0,0,0,434,435,1,0,0,0,435,438,1,0,0,0,436,
        434,1,0,0,0,437,422,1,0,0,0,437,426,1,0,0,0,438,128,1,0,0,0,439,
        441,5,39,0,0,440,442,5,92,0,0,441,442,1,0,0,0,441,440,1,0,0,0,442,
        443,1,0,0,0,443,444,9,0,0,0,444,445,5,39,0,0,445,130,1,0,0,0,446,
        452,5,34,0,0,447,451,8,5,0,0,448,449,5,92,0,0,449,451,5,34,0,0,450,
        447,1,0,0,0,450,448,1,0,0,0,451,454,1,0,0,0,452,450,1,0,0,0,452,
        453,1,0,0,0,453,455,1,0,0,0,454,452,1,0,0,0,455,456,5,34,0,0,456,
        132,1,0,0,0,457,459,7,6,0,0,458,457,1,0,0,0,459,460,1,0,0,0,460,
        458,1,0,0,0,460,461,1,0,0,0,461,462,1,0,0,0,462,463,6,66,0,0,463,
        134,1,0,0,0,17,0,387,396,401,404,407,409,416,420,426,432,434,437,
        441,450,452,460,1,6,0,0
    ]

class grammarCLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    T__40 = 41
    T__41 = 42
    T__42 = 43
    T__43 = 44
    T__44 = 45
    T__45 = 46
    T__46 = 47
    T__47 = 48
    T__48 = 49
    T__49 = 50
    T__50 = 51
    T__51 = 52
    T__52 = 53
    T__53 = 54
    T__54 = 55
    T__55 = 56
    T__56 = 57
    T__57 = 58
    T__58 = 59
    T__59 = 60
    COMMENT = 61
    IDENTIFIER = 62
    INT = 63
    FLOAT = 64
    CHAR = 65
    STRING = 66
    WS = 67

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "';'", "'#ifndef'", "'#endif'", "'#include'", "'<stdio.h>'", 
            "'('", "'*'", "')'", "'{'", "'}'", "','", "'break'", "'continue'", 
            "'typedef'", "'#define'", "'-'", "'if'", "'else'", "'for'", 
            "'while'", "'switch'", "'case'", "':'", "'default'", "'enum'", 
            "'printf'", "'scanf'", "'const'", "'int'", "'char'", "'float'", 
            "'void'", "'struct'", "'union'", "'return'", "'='", "'->'", 
            "'.'", "'++'", "'--'", "'&'", "'+'", "'~'", "'!'", "'/'", "'%'", 
            "'>>'", "'<<'", "'<'", "'>'", "'>='", "'<='", "'=='", "'!='", 
            "'^'", "'|'", "'&&'", "'||'", "'['", "']'" ]

    symbolicNames = [ "<INVALID>",
            "COMMENT", "IDENTIFIER", "INT", "FLOAT", "CHAR", "STRING", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "T__40", "T__41", "T__42", "T__43", 
                  "T__44", "T__45", "T__46", "T__47", "T__48", "T__49", 
                  "T__50", "T__51", "T__52", "T__53", "T__54", "T__55", 
                  "T__56", "T__57", "T__58", "T__59", "COMMENT", "IDENTIFIER", 
                  "INT", "FLOAT", "CHAR", "STRING", "WS" ]

    grammarFileName = "grammarC.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


