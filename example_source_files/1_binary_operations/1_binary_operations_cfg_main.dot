digraph AST {
  "128810403772208" [label="%\".2\" = .2:
  %\".3\" = alloca i32, align 4
  store i32 6, i32* %\".3\", align 4
  ;   INT main ( ) {  INT a = 6 ;
  store i32 6, i32* %\".3\", align 4
  ; a = 6 ;
  %\".8\" = alloca i32, align 4
  store i32 2, i32* %\".8\", align 4
  ; INT b = 2 ;
  store i32 2, i32* %\".8\", align 4
  ; b = 2 ;
  %\".13\" = load i32, i32* %\".3\", align 4
  ;  INT c = a + b ;
  %\".15\" = load i32, i32* %\".8\", align 4
  %\".16\" = add i32 %\".13\", %\".15\"
  %\".17\" = alloca i32, align 4
  store i32 %\".16\", i32* %\".17\", align 4
  %\".19\" = load i32, i32* %\".3\", align 4
  ; INT d = a - b ;
  %\".21\" = load i32, i32* %\".8\", align 4
  %\".22\" = sub i32 %\".19\", %\".21\"
  %\".23\" = alloca i32, align 4
  store i32 %\".22\", i32* %\".23\", align 4
  %\".25\" = load i32, i32* %\".3\", align 4
  ; INT e = a * b ;
  %\".27\" = load i32, i32* %\".8\", align 4
  %\".28\" = mul i32 %\".25\", %\".27\"
  %\".29\" = alloca i32, align 4
  store i32 %\".28\", i32* %\".29\", align 4
  %\".31\" = load i32, i32* %\".3\", align 4
  ; INT f = a / b ;
  %\".33\" = load i32, i32* %\".8\", align 4
  %\".34\" = sdiv i32 %\".31\", %\".33\"
  %\".35\" = alloca i32, align 4
  store i32 %\".34\", i32* %\".35\", align 4
  ;  INT g = a == b ;
  %\".38\" = load i32, i32* %\".3\", align 4
  %\".39\" = load i32, i32* %\".8\", align 4
  %\".40\" = icmp eq i32 %\".38\", %\".39\"
  %\".41\" = zext i1 %\".40\" to i32
  %\".42\" = alloca i32, align 4
  store i32 %\".41\", i32* %\".42\", align 4
  ; INT h = a < b ;
  %\".45\" = load i32, i32* %\".3\", align 4
  %\".46\" = load i32, i32* %\".8\", align 4
  %\".47\" = icmp slt i32 %\".45\", %\".46\"
  %\".48\" = zext i1 %\".47\" to i32
  %\".49\" = alloca i32, align 4
  store i32 %\".48\", i32* %\".49\", align 4
  ; INT i = a > b ;
  %\".52\" = load i32, i32* %\".3\", align 4
  %\".53\" = load i32, i32* %\".8\", align 4
  %\".54\" = icmp sgt i32 %\".52\", %\".53\"
  %\".55\" = zext i1 %\".54\" to i32
  %\".56\" = alloca i32, align 4
  store i32 %\".55\", i32* %\".56\", align 4
  ;  INT j = a != b ;
  %\".59\" = load i32, i32* %\".3\", align 4
  %\".60\" = load i32, i32* %\".8\", align 4
  %\".61\" = icmp ne i32 %\".59\", %\".60\"
  %\".62\" = zext i1 %\".61\" to i32
  %\".63\" = alloca i32, align 4
  store i32 %\".62\", i32* %\".63\", align 4
  ; INT k = a <= b ;
  %\".66\" = load i32, i32* %\".3\", align 4
  %\".67\" = load i32, i32* %\".8\", align 4
  %\".68\" = icmp sle i32 %\".66\", %\".67\"
  %\".69\" = zext i1 %\".68\" to i32
  %\".70\" = alloca i32, align 4
  store i32 %\".69\", i32* %\".70\", align 4
  ; INT l = a >= b ;
  %\".73\" = load i32, i32* %\".3\", align 4
  %\".74\" = load i32, i32* %\".8\", align 4
  %\".75\" = icmp sge i32 %\".73\", %\".74\"
  %\".76\" = zext i1 %\".75\" to i32
  %\".77\" = alloca i32, align 4
  store i32 %\".76\", i32* %\".77\", align 4
  %\".79\" = load i32, i32* %\".3\", align 4
  ;  INT m = a % b ;
  %\".81\" = load i32, i32* %\".8\", align 4
  %\".82\" = srem i32 %\".79\", %\".81\"
  %\".83\" = alloca i32, align 4
  store i32 %\".82\", i32* %\".83\", align 4
  %\".85\" = load i32, i32* %\".3\", align 4
  ;  INT n = a << b ;
  %\".87\" = load i32, i32* %\".8\", align 4
  %\".88\" = shl i32 %\".85\", %\".87\"
  %\".89\" = alloca i32, align 4
  store i32 %\".88\", i32* %\".89\", align 4
  %\".91\" = load i32, i32* %\".3\", align 4
  ;  INT o = a >> b ;
  %\".93\" = load i32, i32* %\".8\", align 4
  %\".94\" = ashr i32 %\".91\", %\".93\"
  %\".95\" = alloca i32, align 4
  store i32 %\".94\", i32* %\".95\", align 4
  ret i32 0
  ;  return 0 ;"];
}
